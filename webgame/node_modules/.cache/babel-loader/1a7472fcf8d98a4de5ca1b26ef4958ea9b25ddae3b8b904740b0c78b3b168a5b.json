{"ast":null,"code":"import userService from \"../services/userService\";\nimport categoryService from \"../services/categoryService\";\nimport filem from \"../miehet.txt\";\nimport filen from \"../naiset.txt\";\nimport filek from \"../kaikki.txt\";\nclass Session {\n  constructor(playAgain) {\n    this.playerId = null;\n    this.name = \"\";\n    this.timer = 8000;\n    this.run = true;\n    this.points = 0;\n    this.targetTime = 0;\n    this.usedNames = [];\n    this.nameData = null;\n    this.playAgain = playAgain;\n    this.initialize();\n  }\n  async initialize() {\n    const [name, playerId] = await getActiveUser();\n    this.name = name;\n    this.playerId = playerId;\n    const [catName, catId] = await getActiveCategory();\n    this.catName = catName;\n    this.catId = catId;\n    let response = null;\n    switch (catName) {\n      case \"men\":\n        document.getElementById(\"text\").innerText = \"MALE NAMES\";\n        response = await fetch(filem);\n        break;\n      case \"women\":\n        document.getElementById(\"text\").innerText = \"FEMALE NAMES\";\n        response = await fetch(filen);\n        break;\n      case \"all\":\n        document.getElementById(\"text\").innerText = \"ALL NAMES\";\n        response = await fetch(filek);\n        break;\n      default:\n        response = await fetch(filem);\n        break;\n    }\n    this.nameData = await response.text();\n  }\n  async playAgain() {\n    this.run = true;\n    this.points = 0;\n    this.usedNames = [];\n    stopInterval();\n    await this.initialize();\n    runTimer(this);\n    this.playAgain();\n  }\n}\nconst getActiveCategory = async () => {\n  try {\n    const response = await categoryService.getAll();\n    const activeCategory = response.find(cat => cat.active === true);\n    if (activeCategory) {\n      return [activeCategory.category, activeCategory.id];\n    } else {\n      throw new Error(\"No active category found\");\n    }\n  } catch (error) {\n    console.error(\"Error getting active category:\", error);\n    // Handle the error appropriately, such as returning a default value or displaying an error message\n    return [null, null];\n  }\n};\nconst getActiveUser = async () => {\n  try {\n    const response = await userService.getAll();\n    const activeUser = response.find(user => user.active === true);\n    if (activeUser) {\n      return [activeUser.username, activeUser.id];\n    } else {\n      throw new Error(\"No active user found\");\n    }\n  } catch (error) {\n    console.error(\"Error getting active user:\", error);\n    // Handle the error appropriately, such as returning a default value or displaying an error message\n    return [null, null];\n  }\n};\nlet interval;\nfunction runTimer(game, setGame, setShowPlayAgain) {\n  if (game.run) {\n    game.run = false;\n  } else {\n    return;\n  }\n  game.targetTime = new Date().getTime() + game.timer;\n\n  // Update the countdown timer every second\n  interval = setInterval(function () {\n    // Calculate the remaining time\n    const now = new Date().getTime();\n    const remainingTime = game.targetTime - now;\n    const minutes = Math.floor(remainingTime / (1000 * 60));\n    let seconds = Math.floor(remainingTime % (1000 * 60) / 1000);\n\n    // Add leading zero if necessary\n    if (seconds < 10) seconds = \"0\" + seconds;\n\n    // Stop the countdown when time is up or when stopGame is true\n    if (remainingTime <= 0) {\n      game.run = false;\n      if (document.getElementById(\"user\")) {\n        document.getElementById(\"user\").disabled = true;\n      }\n      userService.updateActive(game.playerId, game.points, game.catName, false);\n      categoryService.updateActive(game.catId, false);\n      stopInterval(); // Clear the interval when the game is stopped\n\n      // Update the state to show the \"Play Again\" button\n      setGame({\n        ...game\n      });\n      setShowPlayAgain(true);\n      return;\n    }\n\n    // Update the timer display if the element exists and is accessible\n    const timerElement = document.getElementById(\"timer\");\n    if (timerElement) {\n      timerElement.innerHTML = minutes + \":\" + seconds;\n    }\n\n    // Update the points display if the element exists and is accessible\n    const pointsElement = document.getElementById(\"points\");\n    if (pointsElement) {\n      pointsElement.innerHTML = game.points;\n    }\n  }, 1000);\n}\nfunction stopInterval() {\n  clearInterval(interval);\n}\nasync function nameCheck(game) {\n  const name = document.getElementById(\"user\").value.toLowerCase().replace(/\\b\\w/g, letter => letter.toUpperCase());\n  if (!name) {\n    console.log(\"No name entered\");\n    return;\n  }\n  try {\n    const regex = new RegExp(`\\\\b${name}\\\\b`, \"i\");\n    if (regex.test(game.nameData) && !game.usedNames.includes(name)) {\n      game.points += 50;\n      if (game.usedNames.length !== 0) {\n        game.timer += 3000;\n      }\n      game.usedNames.push(name);\n      console.log(`${name} exists in the file`);\n      game.targetTime = new Date().getTime() + game.timer;\n    } else {\n      console.log(`${name} does not exist in the file`);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n  document.getElementById(\"user\").value = \"\";\n}\nexport { nameCheck, runTimer, Session, stopInterval };","map":{"version":3,"names":["userService","categoryService","filem","filen","filek","Session","constructor","playAgain","playerId","name","timer","run","points","targetTime","usedNames","nameData","initialize","getActiveUser","catName","catId","getActiveCategory","response","document","getElementById","innerText","fetch","text","stopInterval","runTimer","getAll","activeCategory","find","cat","active","category","id","Error","error","console","activeUser","user","username","interval","game","setGame","setShowPlayAgain","Date","getTime","setInterval","now","remainingTime","minutes","Math","floor","seconds","disabled","updateActive","timerElement","innerHTML","pointsElement","clearInterval","nameCheck","value","toLowerCase","replace","letter","toUpperCase","log","regex","RegExp","test","includes","length","push"],"sources":["/Users/vihu/Documents/Program/webgame/webgame/src/components/gameLogic.js"],"sourcesContent":["import userService from \"../services/userService\";\nimport categoryService from \"../services/categoryService\";\n\nimport filem from \"../miehet.txt\";\nimport filen from \"../naiset.txt\";\nimport filek from \"../kaikki.txt\";\n\nclass Session {\n  constructor(playAgain) {\n    this.playerId = null;\n    this.name = \"\";\n    this.timer = 8000;\n    this.run = true;\n    this.points = 0;\n    this.targetTime = 0;\n    this.usedNames = [];\n    this.nameData = null;\n    this.playAgain = playAgain\n\n    this.initialize();\n  }\n\n  async initialize() {\n    const [name, playerId] = await getActiveUser();\n    this.name = name;\n    this.playerId = playerId;\n\n    const [catName, catId] = await getActiveCategory();\n    this.catName = catName;\n    this.catId = catId;\n\n    let response = null;\n    switch (catName) {\n      case \"men\":\n        document.getElementById(\"text\").innerText = \"MALE NAMES\";\n        response = await fetch(filem);\n        break;\n      case \"women\":\n        document.getElementById(\"text\").innerText = \"FEMALE NAMES\";\n        response = await fetch(filen);\n        break;\n      case \"all\":\n        document.getElementById(\"text\").innerText = \"ALL NAMES\";\n        response = await fetch(filek);\n        break;\n      default:\n        response = await fetch(filem);\n        break;\n    }\n\n    this.nameData = await response.text();\n  }\n\n  async playAgain() {\n    this.run = true;\n    this.points = 0;\n    this.usedNames = [];\n    stopInterval();\n    await this.initialize();\n    runTimer(this);\n    this.playAgain()\n  }\n}\n\nconst getActiveCategory = async () => {\n  try {\n    const response = await categoryService.getAll();\n    const activeCategory = response.find((cat) => cat.active === true);\n    if (activeCategory) {\n      return [activeCategory.category, activeCategory.id];\n    } else {\n      throw new Error(\"No active category found\");\n    }\n  } catch (error) {\n    console.error(\"Error getting active category:\", error);\n    // Handle the error appropriately, such as returning a default value or displaying an error message\n    return [null, null];\n  }\n};\n\nconst getActiveUser = async () => {\n  try {\n    const response = await userService.getAll();\n    const activeUser = response.find((user) => user.active === true);\n    if (activeUser) {\n      return [activeUser.username, activeUser.id];\n    } else {\n      throw new Error(\"No active user found\");\n    }\n  } catch (error) {\n    console.error(\"Error getting active user:\", error);\n    // Handle the error appropriately, such as returning a default value or displaying an error message\n    return [null, null];\n  }\n};\n\nlet interval;\nfunction runTimer(game, setGame, setShowPlayAgain) {\n  if (game.run) {\n    game.run = false;\n  } else {\n    return;\n  }\n\n  game.targetTime = new Date().getTime() + game.timer;\n\n  // Update the countdown timer every second\n  interval = setInterval(function () {\n    // Calculate the remaining time\n    const now = new Date().getTime();\n    const remainingTime = game.targetTime - now;\n\n    const minutes = Math.floor(remainingTime / (1000 * 60));\n    let seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\n\n    // Add leading zero if necessary\n    if (seconds < 10) seconds = \"0\" + seconds;\n\n    // Stop the countdown when time is up or when stopGame is true\n    if (remainingTime <= 0) {\n      game.run = false;\n      if (document.getElementById(\"user\")) {\n        document.getElementById(\"user\").disabled = true;\n      }\n      userService.updateActive(\n        game.playerId,\n        game.points,\n        game.catName,\n        false\n      );\n      categoryService.updateActive(game.catId, false);\n      stopInterval(); // Clear the interval when the game is stopped\n\n      // Update the state to show the \"Play Again\" button\n      setGame({ ...game });\n      setShowPlayAgain(true);\n\n      return;\n    }\n\n    // Update the timer display if the element exists and is accessible\n    const timerElement = document.getElementById(\"timer\");\n    if (timerElement) {\n      timerElement.innerHTML = minutes + \":\" + seconds;\n    }\n\n    // Update the points display if the element exists and is accessible\n    const pointsElement = document.getElementById(\"points\");\n    if (pointsElement) {\n      pointsElement.innerHTML = game.points;\n    }\n  }, 1000);\n}\n\n\n\n\nfunction stopInterval() {\n  clearInterval(interval);\n}\n\nasync function nameCheck(game) {\n  const name = document\n    .getElementById(\"user\")\n    .value.toLowerCase()\n    .replace(/\\b\\w/g, (letter) => letter.toUpperCase());\n  if (!name) {\n    console.log(\"No name entered\");\n    return;\n  }\n\n  try {\n    const regex = new RegExp(`\\\\b${name}\\\\b`, \"i\");\n    if (regex.test(game.nameData) && !game.usedNames.includes(name)) {\n      game.points += 50;\n      if (game.usedNames.length !== 0) {\n        game.timer += 3000;\n      }\n      game.usedNames.push(name);\n      console.log(`${name} exists in the file`);\n      game.targetTime = new Date().getTime() + game.timer;\n    } else {\n      console.log(`${name} does not exist in the file`);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  document.getElementById(\"user\").value = \"\";\n}\n\nexport { nameCheck, runTimer, Session, stopInterval };\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}