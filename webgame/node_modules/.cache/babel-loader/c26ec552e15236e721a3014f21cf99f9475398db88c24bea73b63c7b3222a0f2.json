{"ast":null,"code":"/*\nModes:\nNormal -> ajallinen, oikeista plussaa ja lis채채 aikaa\nUnique -> jos antaa saman nii tulee miinusta ? ei aikaa ?\n*/\nimport userService from \"../services/userService\";\nimport categoryService from \"../services/categoryService\";\nimport filem from \"../miehet.txt\";\nimport filen from \"../naiset.txt\";\nimport filek from \"../kaikki.txt\";\nclass Session {\n  constructor() {\n    this.playerId = null;\n    this.name = \"\";\n    this.timer = 8000;\n    this.run = true;\n    this.points = 0;\n    this.targetTime = 0;\n    this.usetNames = [];\n    this.nameData = null;\n    this.initialize();\n  }\n  async initialize() {\n    const [name, playerId] = await getActiveUser();\n    this.name = name;\n    this.playerId = playerId;\n    const [catName, catId] = await getActiveCategory();\n    this.catName = catName;\n    this.catId = catId;\n    var response = null;\n    switch (catName) {\n      case \"men\":\n        document.getElementById('text').innerText = \"MALE NAMES\";\n        response = await fetch(filem);\n        break;\n      case \"women\":\n        document.getElementById('text').innerText = \"FEMALE NAMES\";\n        response = await fetch(filen);\n        break;\n      case \"all\":\n        document.getElementById('text').innerText = \"ALL NAMES\";\n        response = await fetch(filek);\n        break;\n      default:\n        response = await fetch(filem);\n        break;\n    }\n    this.nameData = await response.text();\n  }\n}\nconst getActiveCategory = async () => {\n  try {\n    const response = await categoryService.getAll();\n    const activeCategory = response.find(cat => cat.active === true);\n    if (activeCategory) {\n      return [activeCategory.category, activeCategory.id];\n    } else {\n      throw new Error('No active category found');\n    }\n  } catch (error) {\n    console.error('Error getting active category:', error);\n    // Handle the error appropriately, such as returning a default value or displaying an error message\n    return [null, null];\n  }\n};\nconst getActiveUser = async () => {\n  try {\n    const response = await userService.getAll();\n    const activeUser = response.find(user => user.active === true);\n    if (activeUser) {\n      return [activeUser.username, activeUser.id];\n    } else {\n      throw new Error('No active user found');\n    }\n  } catch (error) {\n    console.error('Error getting active user:', error);\n    // Handle the error appropriately, such as returning a default value or displaying an error message\n    return [null, null];\n  }\n};\nfunction runTimer(game, stopGame) {\n  if (game.run) {\n    game.run = false;\n  } else {\n    return;\n  }\n  game.targetTime = new Date().getTime() + game.timer;\n\n  // Update the countdown timer every second\n  var interval = setInterval(function () {\n    // Calculate the remaining time\n    var now = new Date().getTime();\n    game.timer = game.targetTime - now;\n    var minutes = Math.floor(game.timer / (1000 * 60));\n    var seconds = Math.floor(game.timer % (1000 * 60) / 1000);\n\n    // Add leading zero if necessary\n    if (seconds < 10) seconds = '0' + seconds;\n\n    // Stop the countdown when time is up or when stopGame is true\n    if (game.timer <= 0 || stopGame) {\n      clearInterval(interval);\n      game.run = false;\n      if (document.getElementById('user')) {\n        document.getElementById('user').disabled = true;\n      }\n      userService.updateActive(game.playerId, game.points, game.catName, false);\n      categoryService.updateActive(game.catId, false);\n      return;\n    }\n\n    // Update the timer display if the element exists and is accessible\n    var timerElement = document.getElementById('timer');\n    if (document.getElementById('timer')) {\n      timerElement.innerHTML = minutes + ':' + seconds;\n    }\n\n    // Update the points display if the element exists and is accessible\n    var pointsElement = document.getElementById('points');\n    if (pointsElement) {\n      pointsElement.innerHTML = game.points;\n    }\n  }, 1000);\n}\nasync function nameCheck(game) {\n  const name = document.getElementById('user').value.toLowerCase().replace(/\\b\\w/g, letter => letter.toUpperCase());\n  if (!name) {\n    console.log('No name entered');\n    return;\n  }\n  try {\n    const regex = new RegExp(`\\\\b${name}\\\\b`, 'i');\n    if (regex.test(game.nameData) && !game.usetNames.includes(name)) {\n      game.points += 50;\n      if (game.usetNames.length !== 0) {\n        game.timer += 3000;\n      }\n      game.usetNames.push(name);\n      console.log(`${name} exists in the file`);\n      game.targetTime = new Date().getTime() + game.timer;\n    } else {\n      console.log(`${name} does not exist in the file`);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n  document.getElementById('user').value = '';\n}\nexport { nameCheck, runTimer, Session };","map":{"version":3,"names":["userService","categoryService","filem","filen","filek","Session","constructor","playerId","name","timer","run","points","targetTime","usetNames","nameData","initialize","getActiveUser","catName","catId","getActiveCategory","response","document","getElementById","innerText","fetch","text","getAll","activeCategory","find","cat","active","category","id","Error","error","console","activeUser","user","username","runTimer","game","stopGame","Date","getTime","interval","setInterval","now","minutes","Math","floor","seconds","clearInterval","disabled","updateActive","timerElement","innerHTML","pointsElement","nameCheck","value","toLowerCase","replace","letter","toUpperCase","log","regex","RegExp","test","includes","length","push"],"sources":["/Users/vihu/Documents/Program/webgame/webgame/src/components/menNamesGame.js"],"sourcesContent":["/*\nModes:\nNormal -> ajallinen, oikeista plussaa ja lis채채 aikaa\nUnique -> jos antaa saman nii tulee miinusta ? ei aikaa ?\n*/\nimport userService from \"../services/userService\"\nimport categoryService from \"../services/categoryService\"\n\nimport filem from \"../miehet.txt\"\nimport filen from \"../naiset.txt\"\nimport filek from \"../kaikki.txt\"\n\nclass Session {\n  constructor() {\n    this.playerId = null;\n    this.name = \"\";\n    this.timer = 8000;\n    this.run = true;\n    this.points = 0;\n    this.targetTime = 0;\n    this.usetNames = []\n    this.nameData = null\n\n    this.initialize();\n  }\n\n  async initialize() {\n    const [name, playerId] = await getActiveUser();\n    this.name = name;\n    this.playerId = playerId;\n\n    const [catName, catId] = await getActiveCategory();\n    this.catName = catName;\n    this.catId = catId;\n\n    var response = null;\n    switch (catName){\n      case \"men\":\n        document.getElementById('text').innerText = \"MALE NAMES\";\n        response = await fetch(filem)\n        break;\n      case \"women\":\n        document.getElementById('text').innerText = \"FEMALE NAMES\";\n        response = await fetch(filen)\n        break;\n      case \"all\":\n        document.getElementById('text').innerText = \"ALL NAMES\";\n        response = await fetch(filek)\n        break;\n      default:\n        response = await fetch(filem)\n        break;\n    }\n    \n    this.nameData = await response.text();\n  }\n}\n\nconst getActiveCategory = async () => {\n  try {\n    const response = await categoryService.getAll();\n    const activeCategory = response.find(cat => cat.active === true);\n    if (activeCategory) {\n      return [activeCategory.category, activeCategory.id];\n    } else {\n      throw new Error('No active category found');\n    }\n  } catch (error) {\n    console.error('Error getting active category:', error);\n    // Handle the error appropriately, such as returning a default value or displaying an error message\n    return [null, null];\n  }\n};\n\nconst getActiveUser = async () => {\n  try {\n    const response = await userService.getAll();\n    const activeUser = response.find(user => user.active === true);\n    if (activeUser) {\n      return [activeUser.username, activeUser.id];\n    } else {\n      throw new Error('No active user found');\n    }\n  } catch (error) {\n    console.error('Error getting active user:', error);\n    // Handle the error appropriately, such as returning a default value or displaying an error message\n    return [null, null];\n  }\n}\n\nfunction runTimer(game, stopGame) {\n  if (game.run) {\n    game.run = false;\n  } else {\n    return;\n  }\n\n  game.targetTime = new Date().getTime() + game.timer;\n\n  // Update the countdown timer every second\n  var interval = setInterval(function() {\n    // Calculate the remaining time\n    var now = new Date().getTime();\n    game.timer = game.targetTime - now;\n\n    var minutes = Math.floor(game.timer / (1000 * 60));\n    var seconds = Math.floor((game.timer % (1000 * 60)) / 1000);\n\n    // Add leading zero if necessary\n    if (seconds < 10) seconds = '0' + seconds;\n\n    // Stop the countdown when time is up or when stopGame is true\n    if (game.timer <= 0 || stopGame) {\n      clearInterval(interval);\n      game.run = false;\n      if (document.getElementById('user')){\n        document.getElementById('user').disabled = true;\n      }\n      userService.updateActive(game.playerId, game.points, game.catName, false);\n      categoryService.updateActive(game.catId, false);\n      return;\n    }\n\n    // Update the timer display if the element exists and is accessible\n    var timerElement = document.getElementById('timer');\n    if (document.getElementById('timer')) {\n      timerElement.innerHTML = minutes + ':' + seconds;\n    }\n\n    // Update the points display if the element exists and is accessible\n    var pointsElement = document.getElementById('points');\n    if (pointsElement) {\n      pointsElement.innerHTML = game.points;\n    }\n  }, 1000);\n}\n\n\n\nasync function nameCheck(game) {\n  const name = document.getElementById('user').value.toLowerCase().replace(/\\b\\w/g, letter => letter.toUpperCase());\n  if (!name) {\n    console.log('No name entered');\n    return;\n  }\n\n  try {\n    const regex = new RegExp(`\\\\b${name}\\\\b`, 'i');\n    if (regex.test(game.nameData) && !game.usetNames.includes(name)) {\n      game.points += 50;\n      if (game.usetNames.length !== 0){\n        game.timer += 3000;\n      }\n      game.usetNames.push(name);\n      console.log(`${name} exists in the file`);\n      game.targetTime = new Date().getTime() + game.timer;\n    } else {\n      console.log(`${name} does not exist in the file`);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  document.getElementById('user').value = '';\n}\n\nexport {nameCheck, runTimer, Session};\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}